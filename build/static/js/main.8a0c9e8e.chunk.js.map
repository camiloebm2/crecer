{"version":3,"sources":["AppContext.js","firebase.js","GestorColecciones.js","components/FechaSelector.js","components/BuscarProveedor.js","components/BuscarPresentacion.js","components/Producto.js","components/InputNumerico.js","components/DynamicQuantityInput.js","components/ProductosRegistrados.js","components/SubirFactura.js","Compras.js","components/FiltroProductos.js","components/TablaPresentacionesInactivas.js","components/TablaPreciosPorPresentacion.js","components/TablaProductos.js","CambioPrecios.js","app.js","index.js"],"names":["AppContext","createContext","AppProvider","_ref","children","proveedores","setProveedores","useState","presentaciones","setPresentaciones","productos","setProductos","productosSeleccionados","setProductosSeleccionados","detallesCompra","setDetallesCompra","fecha_compra","Date","toISOString","split","forma_pago","id_prov","num_factura","React","createElement","Provider","value","actualizarDetallesCompra","campo","valor","prevState","_objectSpread","agregarProductoSeleccionado","producto","eliminarProductoSeleccionado","id","filter","cargarDatosIniciales","async","proveedoresData","presentacionesData","productosData","fetchFunction","error","console","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","GestorColecciones","colecciones","setColecciones","datosColeccion","setDatosColeccion","estructura","setEstructura","coleccionSeleccionada","setColeccionSeleccionada","nuevaColeccion","setNuevaColeccion","useEffect","coleccionRef","collection","querySnapshot","getDocs","datos","forEach","doc","push","data","length","Object","keys","cargarDatosColeccion","className","onClick","descargarExcel","alert","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","concat","type","accept","onChange","file","e","target","files","reader","FileReader","onload","Uint8Array","event","result","workbook","sheetName","SheetNames","sheetData","sheet_to_json","Sheets","batch","map","row","docRef","setDoc","Promise","all","readAsArrayBuffer","coleccion","key","placeholder","nuevaRef","ejemplo","prev","Fragment","index","dato","idx","FechaSelector","onFechaChange","fecha","setFecha","fechaInicial","obtenerFechaLocalExacta","hoy","setHours","anio","getFullYear","mes","String","getMonth","padStart","dia","getDate","htmlFor","nuevaFecha","BuscarProveedor","onProveedorSelect","searchTerm","setSearchTerm","showSuggestions","setShowSuggestions","nombre_prov","log","toUpperCase","onFocus","p","toLowerCase","includes","handleSelect","proveedor","nombre","presentacionesDisponibles","BuscarPresentacion","onPresentacionSelect","presentacionesFiltradas","presentacion","Producto","onProductoSelect","mostrarDropdown","setMostrarDropdown","buscarProducto","setBuscarProducto","refProducto","useRef","productosRef","productosCargados","docs","cargarProductos","manejarClickFuera","current","contains","document","addEventListener","removeEventListener","productosFiltrados","prod","nombre_prod","ref","onMouseDown","manejarSeleccion","InputNumerico","label","num","undefined","numStr","toString","replace","integer","decimal","formattedInteger","formatValue","rawValue","isNegativeAllowed","test","startsWith","DynamicQuantityInput","totalQuantity","zarzamora","tabora","inputValues","setInputValues","parseNumber","numericValue","parseFloat","Math","max","formatNumber","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","remaining","toFixed","onBlur","ProductosRegistrados","productosLista","setProductosLista","setCompra","setIndiceEdicion","cantidadTotal","precioCompra","seleccionarProducto","nuevaLista","_","i","eliminarProducto","SubirFactura","fechaActual","idProdStr","id_prod","trim","idProdNum","Number","warn","q","query","where","empty","docId","productoRef","updateData","cant_tab","cant_zarza","precio_compra","updateDoc","proveedorId","numFactura","tipoPago","message","Compras","initialState","compra","totalFactura","setTotalFactura","indiceEdicion","reduce","sum","disabled","agregarOActualizarProducto","nuevoProducto","prevLista","onSubmit","actualizaciones","FiltroProductos","filtro","setFiltro","PRESENTACIONES","TablaPresentacionesInactivas","cerrarModal","productoId","presentacionesInactivas","setPresentacionesInactivas","cargarPresentacionesInactivas","useCallback","productoSnap","getDoc","exists","inactivas","tipo","activarPresentacion","TablaPreciosPorPresentacion","presentacionesActivas","setPresentacionesActivas","mostrarModal","setMostrarModal","cargarPresentacionesActivas","activas","actualizarDesdeModal","desactivarPresentacion","TablaProductos","cambios","manejarCambio","fechaHoy","productoSeleccionado","setProductoSeleccionado","mostrarActivarPresentaciones","setMostrarActivarPresentaciones","_ref2","_cambios$producto$id$","_cambios$producto$id","_cambios$producto$id$2","_cambios$producto$id2","_ref3","_cambios$producto$id$3","_cambios$producto$id3","precioUnitario","nuevoPrecio","precioc_ult","utilidadCalculada","togglePreciosAdicionales","nuevaUtilidad","utilidad","nuevoPrecioCalculado","tara","colSpan","CambioPrecios","setCambios","productosArray","App","Router","Link","to","Routes","Route","path","element","Productos","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8a0c9e8e.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [proveedores, setProveedores] = useState([]);\r\n  const [presentaciones, setPresentaciones] = useState([]);\r\n  const [productos, setProductos] = useState([]);\r\n  const [productosSeleccionados, setProductosSeleccionados] = useState([]);\r\n  const [detallesCompra, setDetallesCompra] = useState({\r\n    fecha_compra: new Date().toISOString().split(\"T\")[0],\r\n    forma_pago: \"\",\r\n    id_prov: \"\",\r\n    num_factura: \"\",\r\n  });\r\n\r\n  const actualizarDetallesCompra = (campo, valor) => {\r\n    setDetallesCompra((prevState) => ({\r\n      ...prevState,\r\n      [campo]: valor,\r\n    }));\r\n  };\r\n\r\n  const agregarProductoSeleccionado = (producto) => {\r\n    setProductosSeleccionados((prevState) => [...prevState, producto]);\r\n  };\r\n\r\n  const eliminarProductoSeleccionado = (id) => {\r\n    setProductosSeleccionados((prevState) =>\r\n      prevState.filter((producto) => producto.id !== id)\r\n    );\r\n  };\r\n\r\n  const cargarDatosIniciales = async (fetchFunction) => {\r\n    try {\r\n      const [proveedoresData, presentacionesData, productosData] = await fetchFunction();\r\n      setProveedores(proveedoresData);\r\n      setPresentaciones(presentacionesData);\r\n      setProductos(productosData);\r\n    } catch (error) {\r\n      console.error(\"Error cargando datos iniciales:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        proveedores,\r\n        presentaciones,\r\n        productos,\r\n        productosSeleccionados,\r\n        detallesCompra,\r\n        actualizarDetallesCompra,\r\n        agregarProductoSeleccionado,\r\n        eliminarProductoSeleccionado,\r\n        cargarDatosIniciales,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA--A1JJJsuj2FYCC5y-v8KjEPvUgKg1uI\",\r\n  authDomain: \"crecer-2025.firebaseapp.com\",\r\n  databaseURL: \"https://crecer-2025-default-rtdb.firebaseio.com\",\r\n  projectId: \"crecer-2025\",\r\n  storageBucket: \"crecer-2025.firebasestorage.app\",\r\n  messagingSenderId: \"759739358419\",\r\n  appId: \"1:759739358419:web:2d05b25d0b3022bd1f8826\",\r\n  measurementId: \"G-H92M1BM0H1\"\r\n};\r\n\r\n// Inicializa Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Inicializa Firestore\r\nconst db = getFirestore(app);\r\n\r\n// Exporta db como predeterminado\r\nexport default db;","import React, { useEffect, useState } from \"react\";\r\nimport { collection, getDocs, doc, setDoc } from \"firebase/firestore\"; // Firebase\r\nimport db from \"./firebase\"; // Configuración de Firebase\r\nimport * as XLSX from \"xlsx\"; // Librería para trabajar con Excel\r\nimport \"./gestorColecciones.css\"; // Archivo de estilos\r\n\r\nconst GestorColecciones = () => {\r\n  const [colecciones, setColecciones] = useState([\r\n    \"canastillas\",\r\n    \"cliente\",\r\n    \"compras\",\r\n    \"contable\",\r\n    \"presentacion\",\r\n    \"productos\",\r\n    \"proveedores\",\r\n    \"punto_venta\",\r\n    \"trabajadores\",\r\n    \"usuario\",\r\n  ]); // Lista de colecciones\r\n  const [datosColeccion, setDatosColeccion] = useState([]);\r\n  const [estructura, setEstructura] = useState([]);\r\n  const [coleccionSeleccionada, setColeccionSeleccionada] = useState(\"\");\r\n  const [nuevaColeccion, setNuevaColeccion] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const cargarDatosColeccion = async () => {\r\n      if (coleccionSeleccionada) {\r\n        try {\r\n          const coleccionRef = collection(db, coleccionSeleccionada);\r\n          const querySnapshot = await getDocs(coleccionRef);\r\n\r\n          const datos = [];\r\n          querySnapshot.forEach((doc) => {\r\n            datos.push({ id: doc.id, ...doc.data() });\r\n          });\r\n\r\n          setDatosColeccion(datos);\r\n\r\n          // Obtener estructura de la colección\r\n          if (datos.length > 0) {\r\n            setEstructura(Object.keys(datos[0]));\r\n          } else {\r\n            setEstructura([\"id\", \"campo1\", \"campo2\"]); // Predeterminada si está vacía\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error cargando datos de la colección:\", error);\r\n        }\r\n      }\r\n    };\r\n\r\n    cargarDatosColeccion();\r\n  }, [coleccionSeleccionada]);\r\n\r\n  const descargarExcel = () => {\r\n    if (datosColeccion.length === 0) {\r\n      alert(\"No hay datos para exportar.\");\r\n      return;\r\n    }\r\n\r\n    const ws = XLSX.utils.json_to_sheet(datosColeccion);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, coleccionSeleccionada);\r\n\r\n    XLSX.writeFile(wb, `${coleccionSeleccionada}_export.xlsx`);\r\n    alert(`Archivo de ${coleccionSeleccionada} exportado con éxito.`);\r\n  };\r\n\r\n  const importarExcel = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) {\r\n      alert(\"Por favor selecciona un archivo Excel.\");\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = async (event) => {\r\n      const data = new Uint8Array(event.target.result);\r\n      const workbook = XLSX.read(data, { type: \"array\" });\r\n      const sheetName = workbook.SheetNames[0];\r\n      const sheetData = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName]);\r\n\r\n      if (!coleccionSeleccionada) {\r\n        alert(\"Por favor selecciona una colección antes de importar.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const coleccionRef = collection(db, coleccionSeleccionada);\r\n\r\n        const batch = sheetData.map(async (row) => {\r\n          const id = row.id || doc(coleccionRef).id; // Usa 'id' del Excel o genera uno nuevo\r\n          const docRef = doc(db, coleccionSeleccionada, id);\r\n          await setDoc(docRef, row);\r\n        });\r\n\r\n        await Promise.all(batch);\r\n\r\n        alert(\"Datos importados con éxito.\");\r\n        setDatosColeccion(sheetData); // Actualiza la tabla visible\r\n      } catch (error) {\r\n        console.error(\"Error importando datos:\", error);\r\n        alert(\"Hubo un error al importar los datos.\");\r\n      }\r\n    };\r\n\r\n    reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  const crearNuevaColeccion = async () => {\r\n    if (!nuevaColeccion) {\r\n      alert(\"Por favor, ingresa un nombre para la nueva colección.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const nuevaRef = doc(collection(db, nuevaColeccion));\r\n      await setDoc(nuevaRef, { ejemplo: \"Datos iniciales\" });\r\n      alert(`Colección '${nuevaColeccion}' creada con éxito.`);\r\n      setColecciones((prev) => [...prev, nuevaColeccion]); // Agregar a la lista de colecciones\r\n      setNuevaColeccion(\"\"); // Limpiar el campo de texto\r\n    } catch (error) {\r\n      console.error(\"Error creando nueva colección:\", error);\r\n      alert(\"Hubo un error al crear la colección.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gestor-container\">\r\n      <div className=\"header\">\r\n        <h1>Gestor de Colecciones</h1>\r\n        <div className=\"acciones-header\">\r\n          <button className=\"boton-descargar\" onClick={descargarExcel}>\r\n            Descargar Excel\r\n          </button>\r\n          <label className=\"boton-importar\">\r\n            Importar Excel\r\n            <input type=\"file\" accept=\".xlsx, .xls\" onChange={importarExcel} />\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"selector\">\r\n        <label>Seleccionar Colección:</label>\r\n        <select\r\n          value={coleccionSeleccionada}\r\n          onChange={(e) => setColeccionSeleccionada(e.target.value)}\r\n        >\r\n          <option value=\"\">-- Seleccionar --</option>\r\n          {colecciones.map((coleccion) => (\r\n            <option key={coleccion} value={coleccion}>\r\n              {coleccion}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"crear-coleccion\">\r\n        <label>Nueva Colección:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={nuevaColeccion}\r\n          onChange={(e) => setNuevaColeccion(e.target.value)}\r\n          placeholder=\"Nombre de la colección\"\r\n        />\r\n        <button onClick={crearNuevaColeccion}>Crear Colección</button>\r\n      </div>\r\n\r\n      {coleccionSeleccionada && (\r\n        <>\r\n          <h2>Estructura de la Colección: {coleccionSeleccionada}</h2>\r\n          <ul>\r\n            {estructura.map((campo, index) => (\r\n              <li key={index}>{campo}</li>\r\n            ))}\r\n          </ul>\r\n\r\n          <h2>Datos de la Colección</h2>\r\n          <table className=\"tabla-datos\">\r\n            <thead>\r\n              <tr>\r\n                {estructura.map((campo, index) => (\r\n                  <th key={index}>{campo}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {datosColeccion.map((dato, index) => (\r\n                <tr key={index}>\r\n                  {estructura.map((campo, idx) => (\r\n                    <td key={idx}>{dato[campo]}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GestorColecciones;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FechaSelector = ({ value, onFechaChange }) => {\r\n  const [fecha, setFecha] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const obtenerFechaLocalExacta = () => {\r\n      const hoy = new Date(); // Fecha actual\r\n      hoy.setHours(0, 0, 0, 0); // Reiniciar horas a las 00:00:00 para evitar desajustes\r\n      const anio = hoy.getFullYear();\r\n      const mes = String(hoy.getMonth() + 1).padStart(2, \"0\");\r\n      const dia = String(hoy.getDate()).padStart(2, \"0\");\r\n      return `${anio}-${mes}-${dia}`; // Formato YYYY-MM-DD\r\n    };\r\n\r\n    const fechaInicial = value || obtenerFechaLocalExacta();\r\n    setFecha(fechaInicial); // Establecer la fecha inicial\r\n  }, [value]);\r\n\r\n  const handleChange = (e) => {\r\n    const nuevaFecha = e.target.value;\r\n    setFecha(nuevaFecha); // Actualizar la fecha seleccionada\r\n    onFechaChange(nuevaFecha); // Notificar al componente padre\r\n  };\r\n\r\n  return (\r\n    <div className=\"fecha-selector\">\r\n      <label htmlFor=\"fecha\">Fecha de Compra:</label>\r\n      <input\r\n        type=\"date\"\r\n        id=\"fecha\"\r\n        value={fecha}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFechaSelector.propTypes = {\r\n  value: PropTypes.string, // Fecha inicial en formato YYYY-MM-DD\r\n  onFechaChange: PropTypes.func.isRequired, // Función para manejar cambios de fecha\r\n};\r\n\r\nexport default FechaSelector;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BuscarProveedor = ({ onProveedorSelect }) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [proveedores, setProveedores] = useState([]);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setProveedores([\r\n      { id: \"001\", nombre_prov: \"Proveedor A\" },\r\n      { id: \"002\", nombre_prov: \"Proveedor B\" },\r\n      { id: \"003\", nombre_prov: \"Proveedor C\" },\r\n    ]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Proveedor seleccionado en BuscarProveedor:\", searchTerm);\r\n  }, [searchTerm]);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value.toUpperCase());\r\n    setShowSuggestions(true);\r\n  };\r\n\r\n  const handleSelect = (proveedor) => {\r\n    console.log(\"Proveedor seleccionado antes de enviar a Compras:\", proveedor);\r\n    onProveedorSelect({ nombre: proveedor.nombre_prov, id: proveedor.id });\r\n    setSearchTerm(proveedor.nombre_prov);\r\n    setShowSuggestions(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"buscar-proveedor\">\r\n      <label>Buscar Proveedor:</label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Ingrese nombre o ID del proveedor\"\r\n        value={searchTerm}\r\n        onChange={handleSearchChange}\r\n        onFocus={() => setShowSuggestions(true)}\r\n      />\r\n      {showSuggestions && searchTerm && (\r\n        <ul className=\"proveedor-suggestions\">\r\n          {proveedores\r\n            .filter(\r\n              (p) =>\r\n                p.nombre_prov.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                p.id.includes(searchTerm)\r\n            )\r\n            .map((p) => (\r\n              <li key={p.id} onClick={() => handleSelect(p)}>\r\n                {p.id} - {p.nombre_prov}\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nBuscarProveedor.propTypes = {\r\n  onProveedorSelect: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BuscarProveedor;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./DesplegableBusqueda.css\"; // Usamos el mismo estilo que el de proveedores\r\n\r\nconst presentacionesDisponibles = [\r\n  \"ATADO\",\r\n  \"BANDEJA\",\r\n  \"BOLSA\",\r\n  \"BULTO\",\r\n  \"CAJA\",\r\n  \"CANASTILLA\",\r\n  \"DOCENA\",\r\n  \"HUACAL\",\r\n  \"KILO\",\r\n  \"MALLA\",\r\n  \"PAQUETE\",\r\n  \"UNIDAD\",\r\n];\r\n\r\nconst BuscarPresentacion = ({ onPresentacionSelect }) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value.toUpperCase());\r\n    setShowSuggestions(true);\r\n  };\r\n\r\n  const handleSelect = (presentacion) => {\r\n    onPresentacionSelect(presentacion);\r\n    setSearchTerm(presentacion);\r\n    setShowSuggestions(false);\r\n  };\r\n\r\n  const presentacionesFiltradas = presentacionesDisponibles.filter((p) =>\r\n    p.includes(searchTerm)\r\n  );\r\n\r\n  return (\r\n    <div className=\"desplegable-busqueda-container\">\r\n      <label>Buscar Presentación:</label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Ingrese tipo de presentación\"\r\n        value={searchTerm}\r\n        onChange={handleSearchChange}\r\n        onFocus={() => setShowSuggestions(true)}\r\n        className=\"desplegable-busqueda-input\"\r\n      />\r\n      {showSuggestions && searchTerm && (\r\n        <ul className=\"desplegable-busqueda-lista\">\r\n          {presentacionesFiltradas.map((p) => (\r\n            <li key={p} onClick={() => handleSelect(p)} className=\"desplegable-busqueda-item\">\r\n              {p}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nBuscarPresentacion.propTypes = {\r\n  onPresentacionSelect: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BuscarPresentacion;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { getFirestore, collection, getDocs } from \"firebase/firestore\";\r\nimport \"./Producto.css\";\r\n\r\nconst Producto = ({ onProductoSelect }) => {\r\n  const [productos, setProductos] = useState([]);\r\n  const [mostrarDropdown, setMostrarDropdown] = useState(false);\r\n  const [buscarProducto, setBuscarProducto] = useState(\"\");\r\n  const refProducto = useRef(null); // Referencia para el componente Producto\r\n\r\n  // Cargar productos desde Firebase\r\n  const cargarProductos = async () => {\r\n    const db = getFirestore();\r\n    const productosRef = collection(db, \"productos\");\r\n\r\n    try {\r\n      const snapshot = await getDocs(productosRef);\r\n      const productosCargados = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setProductos(productosCargados);\r\n    } catch (error) {\r\n      console.error(\"Error al cargar productos desde Firebase:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    cargarProductos();\r\n  }, []);\r\n\r\n  // Manejar la selección del producto\r\n  const manejarSeleccion = (producto) => {\r\n    onProductoSelect(producto); // Llama a la función pasada desde App.js\r\n    setBuscarProducto(producto.nombre_prod); // Muestra el nombre del producto seleccionado\r\n    setMostrarDropdown(false); // Oculta el desplegable\r\n  };\r\n\r\n  // Cerrar el desplegable si haces clic fuera del componente\r\n  useEffect(() => {\r\n    const manejarClickFuera = (event) => {\r\n      if (refProducto.current && !refProducto.current.contains(event.target)) {\r\n        setMostrarDropdown(false); // Cierra el desplegable si el clic ocurre fuera\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", manejarClickFuera);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", manejarClickFuera);\r\n    };\r\n  }, []);\r\n\r\n  // Filtrar productos según el texto ingresado\r\n  const productosFiltrados = productos.filter((prod) =>\r\n    prod.nombre_prod.toLowerCase().includes(buscarProducto.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"producto-container\" ref={refProducto}>\r\n      <label>\r\n        Producto:\r\n        <input\r\n          type=\"text\"\r\n          value={buscarProducto}\r\n          onChange={(e) => {\r\n            setBuscarProducto(e.target.value);\r\n            setMostrarDropdown(true);\r\n          }}\r\n          placeholder=\"Buscar producto\"\r\n          onFocus={() => setMostrarDropdown(true)}\r\n        />\r\n      </label>\r\n\r\n      {mostrarDropdown && productosFiltrados.length > 0 && (\r\n        <ul className=\"desplegable\">\r\n          {productosFiltrados.map((prod) => (\r\n            <li key={prod.id} onMouseDown={() => manejarSeleccion(prod)}>\r\n              {prod.nombre_prod}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      {mostrarDropdown && productosFiltrados.length === 0 && (\r\n        <p>No se encontraron productos.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Producto;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst InputNumerico = ({ label, value, onChange, placeholder }) => {\r\n  const formatValue = (num) => {\r\n    if (num === \"\" || num === null || num === undefined) return \"\";\r\n    const numStr = num.toString().replace(/,/g, \"\");\r\n    const [integer, decimal] = numStr.split(\".\");\r\n    const formattedInteger = integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    return decimal !== undefined ? `${formattedInteger}.${decimal}` : formattedInteger;\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    let rawValue = e.target.value.replace(/,/g, \"\");\r\n\r\n    const isNegativeAllowed = label === \"Utilidad (%)\";\r\n\r\n    if (/^-?\\d*\\.?\\d{0,2}$/.test(rawValue) || rawValue === \"\") {\r\n      if (rawValue.startsWith(\"0\") && rawValue.length > 1 && rawValue[1] !== \".\") {\r\n        rawValue = rawValue.replace(/^0+/, \"\");\r\n      }\r\n      if (rawValue.startsWith(\"-\") && !isNegativeAllowed) {\r\n        return;\r\n      }\r\n      onChange(rawValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-numerico\">\r\n      {label && <label>{label}</label>}\r\n      <input\r\n        type=\"text\"\r\n        value={formatValue(value)}\r\n        onChange={handleInputChange}\r\n        placeholder={placeholder || \"Ingrese un valor\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nInputNumerico.propTypes = {\r\n  label: PropTypes.string,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  onChange: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport default InputNumerico;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport InputNumerico from \"./InputNumerico\";\r\n\r\nconst DynamicQuantityInput = ({ totalQuantity, zarzamora, tabora, onChange }) => {\r\n  const [inputValues, setInputValues] = useState({\r\n    zarzamora: zarzamora.toString(),\r\n    tabora: tabora.toString(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Actualiza los valores locales si el total o los valores cambian desde el padre\r\n    setInputValues({\r\n      zarzamora: zarzamora.toString(),\r\n      tabora: tabora.toString(),\r\n    });\r\n  }, [totalQuantity, zarzamora, tabora]);\r\n\r\n  const parseNumber = (value) => {\r\n    const numericValue = parseFloat(value.replace(/,/g, \"\")) || 0;\r\n    return Math.max(0, numericValue); // Evita valores negativos\r\n  };\r\n\r\n  const formatNumber = (value) => {\r\n    return new Intl.NumberFormat(\"en-US\", {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    }).format(value);\r\n  };\r\n\r\n  const handleZarzamoraChange = (value) => {\r\n    const numericValue = parseNumber(value);\r\n\r\n    // Si el valor excede el total, ajustarlo\r\n    if (numericValue > totalQuantity) {\r\n      setInputValues((prev) => ({\r\n        ...prev,\r\n        zarzamora: formatNumber(totalQuantity),\r\n        tabora: \"0.00\",\r\n      }));\r\n      onChange({ zarzamora: totalQuantity, tabora: 0 });\r\n      return;\r\n    }\r\n\r\n    // Calcular el restante y actualizar dinámicamente\r\n    const remaining = Math.max(0, parseFloat((totalQuantity - numericValue).toFixed(2)));\r\n    setInputValues((prev) => ({\r\n      ...prev,\r\n      zarzamora: value,\r\n      tabora: formatNumber(remaining),\r\n    }));\r\n    onChange({ zarzamora: numericValue, tabora: remaining });\r\n  };\r\n\r\n  const handleTaboraChange = (value) => {\r\n    const numericValue = parseNumber(value);\r\n\r\n    // Si el valor excede el total, ajustarlo\r\n    if (numericValue > totalQuantity) {\r\n      setInputValues((prev) => ({\r\n        ...prev,\r\n        tabora: formatNumber(totalQuantity),\r\n        zarzamora: \"0.00\",\r\n      }));\r\n      onChange({ zarzamora: 0, tabora: totalQuantity });\r\n      return;\r\n    }\r\n\r\n    // Calcular el restante y actualizar dinámicamente\r\n    const remaining = Math.max(0, parseFloat((totalQuantity - numericValue).toFixed(2)));\r\n    setInputValues((prev) => ({\r\n      ...prev,\r\n      tabora: value,\r\n      zarzamora: formatNumber(remaining),\r\n    }));\r\n    onChange({ zarzamora: remaining, tabora: numericValue });\r\n  };\r\n\r\n  return (\r\n    <div className=\"dynamic-quantity-input\">\r\n      <div>\r\n        <InputNumerico\r\n          label=\"Cantidad Zarzamora\"\r\n          value={inputValues.zarzamora}\r\n          onChange={handleZarzamoraChange}\r\n          onBlur={() =>\r\n            setInputValues((prev) => ({\r\n              ...prev,\r\n              zarzamora: formatNumber(parseNumber(prev.zarzamora)),\r\n            }))\r\n          }\r\n          placeholder=\"Ingrese cantidad para Zarzamora\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <InputNumerico\r\n          label=\"Cantidad Tabora\"\r\n          value={inputValues.tabora}\r\n          onChange={handleTaboraChange}\r\n          onBlur={() =>\r\n            setInputValues((prev) => ({\r\n              ...prev,\r\n              tabora: formatNumber(parseNumber(prev.tabora)),\r\n            }))\r\n          }\r\n          placeholder=\"Ingrese cantidad para Tabora\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDynamicQuantityInput.propTypes = {\r\n  totalQuantity: PropTypes.number.isRequired,\r\n  zarzamora: PropTypes.number.isRequired,\r\n  tabora: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default DynamicQuantityInput;\r\n","import React from \"react\";\r\nimport \"./productosRegistrados.css\";\r\n\r\nconst ProductosRegistrados = ({ productosLista, setProductosLista, setCompra, setIndiceEdicion }) => {\r\n  const seleccionarProducto = (index) => {\r\n    const producto = productosLista[index];\r\n    setCompra({\r\n      producto: producto.producto,\r\n      presentacion: producto.presentacion,\r\n      cantidadTotal: producto.cantidadTotal,\r\n      zarzamora: producto.zarzamora,\r\n      tabora: producto.tabora,\r\n      precioCompra: producto.precioCompra,\r\n    });\r\n    setIndiceEdicion(index);\r\n  };\r\n\r\n  const eliminarProducto = (index) => {\r\n    const nuevaLista = productosLista.filter((_, i) => i !== index);\r\n    setProductosLista(nuevaLista);\r\n  };\r\n\r\n  return (\r\n    <div className=\"productos-registrados\">\r\n      <h2>Productos Registrados</h2>\r\n      {productosLista.length > 0 ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Producto</th>\r\n              <th>Presentación</th>\r\n              <th>Cantidad</th>\r\n              <th>Zarzamora</th>\r\n              <th>Tabora</th>\r\n              <th>Total</th>\r\n              <th>Acciones</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {productosLista.map((producto, index) => (\r\n              <tr key={index}>\r\n                <td>{typeof producto.producto === \"string\" ? producto.producto : producto.producto.nombre_prod}</td>\r\n                <td>{producto.presentacion}</td>\r\n                <td>{producto.cantidadTotal}</td>\r\n                <td>{producto.zarzamora}</td>\r\n                <td>{producto.tabora}</td>\r\n                <td>${(producto.cantidadTotal * producto.precioCompra).toFixed(2)}</td>\r\n                <td>\r\n                  <button onClick={() => seleccionarProducto(index)}>Editar</button>\r\n                  <button onClick={() => eliminarProducto(index)}>Eliminar</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No hay productos registrados.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductosRegistrados;\r\n","import React from \"react\";\r\nimport { collection, query, where, getDocs, updateDoc, doc } from \"firebase/firestore\";\r\nimport db from \"../firebase\";\r\nimport \"./SubirFactura.css\";\r\n\r\nconst SubirFactura = ({ productosLista, setProductosLista, setCompra }) => {\r\n  const handleSubirFactura = async () => {\r\n    if (productosLista.length === 0) {\r\n      alert(\"No hay productos en la factura para subir.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const fechaActual = new Date().toISOString().split(\"T\")[0]; // Formato YYYY-MM-DD\r\n      console.log(\"Fecha de compra a actualizar:\", fechaActual);\r\n\r\n      for (const producto of productosLista) {\r\n        console.log(\"Procesando producto:\", producto);\r\n\r\n        // Convertir id_prod a número si es posible, sino mantenerlo como string\r\n        const idProdStr = String(producto.id_prod || \"\").trim();\r\n        const idProdNum = Number(producto.id_prod) || null;\r\n\r\n        if (!idProdStr) {\r\n          console.warn(\"⛔ Producto ignorado por falta de id_prod:\", producto);\r\n          continue;\r\n        }\r\n\r\n        // Buscar el documento en Firestore por el campo `id_prod` (tanto como string y número)\r\n        const productosRef = collection(db, \"productos\");\r\n        let q = query(productosRef, where(\"id_prod\", \"==\", idProdStr));\r\n\r\n        let querySnapshot = await getDocs(q);\r\n\r\n        if (querySnapshot.empty && idProdNum !== null) {\r\n          // Intentar buscar como número si no se encuentra como string\r\n          q = query(productosRef, where(\"id_prod\", \"==\", idProdNum));\r\n          querySnapshot = await getDocs(q);\r\n        }\r\n\r\n        if (querySnapshot.empty) {\r\n          console.error(`⛔ No se encontró el producto con id_prod: ${producto.id_prod}`);\r\n          continue;\r\n        }\r\n\r\n        // Obtener el ID real del documento en Firestore\r\n        const docId = querySnapshot.docs[0].id;\r\n        const productoRef = doc(db, \"productos\", docId);\r\n\r\n        // Datos a actualizar en Firestore\r\n        const updateData = {\r\n          fecha_compra: fechaActual,\r\n          cant_tab: Number(producto.tabora) || 0,\r\n          cant_zarza: Number(producto.zarzamora) || 0,\r\n          precio_compra: Number(producto.precioCompra) || 0,\r\n          presentacion: producto.presentacion || \"No especificada\", // 🔹 Se asegura que la presentación se actualice correctamente\r\n        };\r\n\r\n        console.log(`✅ Actualizando producto ${docId} con datos:`, updateData);\r\n        await updateDoc(productoRef, updateData);\r\n        console.log(`✅ Producto ${docId} actualizado correctamente en Firestore.`);\r\n      }\r\n\r\n      // Limpiar formulario después de subir la factura\r\n      setProductosLista([]);\r\n      setCompra({\r\n        fecha: new Date().toISOString().split(\"T\")[0],\r\n        proveedor: \"\",\r\n        proveedorId: \"\",\r\n        numFactura: \"\",\r\n        tipoPago: \"debito\", // Se mantiene la opción de pago\r\n        producto: \"\",\r\n        presentacion: \"\",\r\n        cantidadTotal: 0,\r\n        zarzamora: 0,\r\n        tabora: 0,\r\n        precioCompra: 0,\r\n        id_prod: \"\",\r\n      });\r\n\r\n      alert(\"Factura subida y base de datos actualizada con éxito.\");\r\n    } catch (error) {\r\n      console.error(\"❌ Error al subir la factura:\", error);\r\n      alert(`Hubo un error al subir la factura: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button className=\"btn-subir-factura\" onClick={handleSubirFactura}>\r\n      Subir Factura\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SubirFactura;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport FechaSelector from \"./components/FechaSelector\";\r\nimport BuscarProveedor from \"./components/BuscarProveedor\";\r\nimport BuscarPresentacion from \"./components/BuscarPresentacion\";\r\nimport Producto from \"./components/Producto\";\r\nimport DynamicQuantityInput from \"./components/DynamicQuantityInput\";\r\nimport InputNumerico from \"./components/InputNumerico\";\r\nimport ProductosRegistrados from \"./components/ProductosRegistrados\";\r\nimport SubirFactura from \"./components/SubirFactura\";\r\nimport { updateDoc, doc } from \"firebase/firestore\";\r\nimport db from \"./firebase\";\r\nimport \"./compras.css\";\r\n\r\nconst Compras = () => {\r\n  const initialState = {\r\n    fecha: new Date().toISOString().split(\"T\")[0],\r\n    proveedor: \"\",\r\n    proveedorId: \"\",\r\n    numFactura: \"\",\r\n    tipoPago: \"debito\",\r\n    producto: \"\",\r\n    presentacion: \"Unidad\",\r\n    cantidadTotal: 0,\r\n    zarzamora: 0,\r\n    tabora: 0,\r\n    precioCompra: 0,\r\n    id_prod: \"\",\r\n  };\r\n\r\n  const [compra, setCompra] = useState(initialState);\r\n  const [productosLista, setProductosLista] = useState([]);\r\n  const [totalFactura, setTotalFactura] = useState(0);\r\n  const [indiceEdicion, setIndiceEdicion] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setTotalFactura(\r\n      productosLista.reduce(\r\n        (sum, producto) => sum + producto.cantidadTotal * producto.precioCompra,\r\n        0\r\n      )\r\n    );\r\n  }, [productosLista]);\r\n\r\n  const agregarOActualizarProducto = () => {\r\n    if (!compra.producto || !compra.presentacion || compra.cantidadTotal <= 0) {\r\n      alert(\"Debe completar los datos del producto antes de agregarlo.\");\r\n      return;\r\n    }\r\n\r\n    const nuevoProducto = {\r\n      ...compra,\r\n      cantidadTotal: Number(compra.cantidadTotal),\r\n      zarzamora: Number(compra.zarzamora),\r\n      tabora: Number(compra.tabora),\r\n      precioCompra: Number(compra.precioCompra),\r\n      id_prod: compra.id_prod || \"\",\r\n    };\r\n\r\n    if (!nuevoProducto.id_prod) {\r\n      alert(\"El producto seleccionado no tiene un ID válido.\");\r\n      return;\r\n    }\r\n\r\n    setProductosLista((prevLista) =>\r\n      indiceEdicion !== null\r\n        ? prevLista.map((p, idx) => (idx === indiceEdicion ? nuevoProducto : p))\r\n        : [...prevLista, nuevoProducto]\r\n    );\r\n\r\n    setIndiceEdicion(null);\r\n    setCompra(initialState);\r\n  };\r\n\r\n  const subirFactura = async () => {\r\n    try {\r\n      const actualizaciones = productosLista.map(async (producto) => {\r\n        if (!producto.id_prod) {\r\n          console.error(\"Producto sin ID válido:\", producto);\r\n          return;\r\n        }\r\n\r\n        const productoRef = doc(db, \"productos\", producto.id_prod);\r\n        \r\n        console.log(`Actualizando producto ${producto.id_prod} con presentación: ${producto.presentacion}`);\r\n\r\n        await updateDoc(productoRef, {\r\n          presentacion: producto.presentacion,\r\n          fecha_compra: compra.fecha,\r\n        });\r\n      });\r\n\r\n      await Promise.all(actualizaciones);\r\n      alert(\"Factura subida y presentación actualizada en Firebase.\");\r\n      setProductosLista([]);\r\n      setCompra(initialState);\r\n    } catch (error) {\r\n      console.error(\"Error al subir la factura:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"compras-container\">\r\n      <h1>Registro de Compras</h1>\r\n      <FechaSelector onFechaChange={(fecha) => setCompra((prev) => ({ ...prev, fecha }))} disabled={productosLista.length > 0} />\r\n      <BuscarProveedor onProveedorSelect={(proveedor) => setCompra((prev) => ({ ...prev, proveedor: proveedor.nombre, proveedorId: proveedor.id }))} disabled={productosLista.length > 0} />\r\n      <InputNumerico label=\"Número de Factura\" value={compra.numFactura} onChange={(value) => setCompra((prev) => ({ ...prev, numFactura: value }))} placeholder=\"Ingrese número de factura\" disabled={productosLista.length > 0} />\r\n      \r\n      <div className=\"tipo-pago-container\">\r\n        <label>Tipo de Pago:</label>\r\n        <select value={compra.tipoPago} onChange={(e) => setCompra((prev) => ({ ...prev, tipoPago: e.target.value }))}>\r\n          <option value=\"debito\">Débito</option>\r\n          <option value=\"credito\">Crédito</option>\r\n        </select>\r\n      </div>\r\n      \r\n      <BuscarPresentacion onPresentacionSelect={(presentacion) => setCompra((prev) => ({ ...prev, presentacion }))} />\r\n      <Producto onProductoSelect={(producto) => setCompra((prev) => ({ ...prev, producto: producto.nombre_prod, id_prod: producto.id_prod }))} />\r\n      <InputNumerico label=\"Cantidad Total\" value={compra.cantidadTotal} onChange={(value) => setCompra((prev) => ({ ...prev, cantidadTotal: Number(value) }))} />\r\n      <DynamicQuantityInput totalQuantity={compra.cantidadTotal} zarzamora={compra.zarzamora} tabora={compra.tabora} onChange={({ zarzamora, tabora }) => setCompra((prev) => ({ ...prev, zarzamora, tabora }))} />\r\n      <InputNumerico label=\"Precio de Compra\" value={compra.precioCompra} onChange={(value) => setCompra((prev) => ({ ...prev, precioCompra: Number(value) }))} />\r\n      <button className=\"btn-agregar\" onClick={agregarOActualizarProducto}>\r\n        {indiceEdicion !== null ? \"Actualizar Producto\" : \"Agregar Producto\"}\r\n      </button>\r\n      <ProductosRegistrados productosLista={productosLista} setProductosLista={setProductosLista} setCompra={setCompra} setIndiceEdicion={setIndiceEdicion} />\r\n      <h3>Total Factura: ${totalFactura.toFixed(2)}</h3>\r\n      <div className=\"subir-factura-container\">\r\n        <SubirFactura productosLista={productosLista} setProductosLista={setProductosLista} setCompra={setCompra} onSubmit={subirFactura} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Compras;\r\n","import React from \"react\";\r\n\r\nconst FiltroProductos = ({ filtro, setFiltro }) => {\r\n  return (\r\n    <div className=\"filtro-container\">\r\n      <label>Filtrar:</label>\r\n      <select value={filtro} onChange={(e) => setFiltro(e.target.value)}>\r\n        <option value=\"todos\">Todos los productos</option>\r\n        <option value=\"con_compra\">Productos con compra (hoy)</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FiltroProductos;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { doc, getDoc, updateDoc } from \"firebase/firestore\";\r\nimport db from \"../firebase\";\r\n\r\nconst PRESENTACIONES = [\r\n  \"malla\",\r\n  \"2000\",\r\n  \"3000\",\r\n  \"bandeja\",\r\n  \"entero\",\r\n  \"bulto\",\r\n  \"medio_bulto\",\r\n  \"canastilla\",\r\n  \"bolsa\",\r\n  \"docena\",\r\n  \"oferta\",\r\n];\r\n\r\nconst TablaPresentacionesInactivas = ({ cerrarModal, productoId }) => {\r\n  const [presentacionesInactivas, setPresentacionesInactivas] = useState([]);\r\n\r\n  // Corrección: Se usa useCallback para evitar warning en useEffect\r\n  const cargarPresentacionesInactivas = useCallback(async () => {\r\n    if (productoId) {\r\n      const productoRef = doc(db, \"productos\", productoId);\r\n      const productoSnap = await getDoc(productoRef);\r\n      if (productoSnap.exists()) {\r\n        const data = productoSnap.data();\r\n        const inactivas = PRESENTACIONES.filter((tipo) => data[tipo] === \"inactivo\");\r\n        setPresentacionesInactivas(inactivas);\r\n      }\r\n    }\r\n  }, [productoId]);\r\n\r\n  useEffect(() => {\r\n    cargarPresentacionesInactivas();\r\n  }, [cargarPresentacionesInactivas]); // ✅ Agregamos la función como dependencia para evitar el warning\r\n\r\n  const activarPresentacion = async (presentacion) => {\r\n    try {\r\n      const productoRef = doc(db, \"productos\", productoId);\r\n      await updateDoc(productoRef, {\r\n        [presentacion]: \"activo\",\r\n      });\r\n\r\n      // Eliminar la presentación activada de la lista de inactivas\r\n      setPresentacionesInactivas((prev) => prev.filter((p) => p !== presentacion));\r\n    } catch (error) {\r\n      console.error(\"Error al activar presentación:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tabla-presentaciones-inactivas\">\r\n      <h3>Presentaciones Inactivas</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Tipo</th>\r\n            <th>Acción</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {presentacionesInactivas.map((tipo) => (\r\n            <tr key={tipo}>\r\n              <td>{tipo}</td>\r\n              <td>\r\n                <button className=\"btn-activar\" onClick={() => activarPresentacion(tipo)}>\r\n                  Activar\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <button className=\"btn-cerrar\" onClick={cerrarModal}>\r\n        Cerrar\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TablaPresentacionesInactivas;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { doc, updateDoc, getDoc } from \"firebase/firestore\";\r\nimport db from \"../firebase\";\r\nimport TablaPresentacionesInactivas from \"./TablaPresentacionesInactivas\";\r\nimport \"./TablaPreciosPorPresentacion.css\";\r\n\r\nconst PRESENTACIONES = [\r\n  \"malla\",\r\n  \"2000\",\r\n  \"3000\",\r\n  \"bandeja\",\r\n  \"entero\",\r\n  \"bulto\",\r\n  \"medio_bulto\",\r\n  \"canastilla\",\r\n  \"bolsa\",\r\n  \"docena\",\r\n  \"oferta\",\r\n];\r\n\r\nconst TablaPreciosPorPresentacion = ({ producto }) => {\r\n  const [presentacionesActivas, setPresentacionesActivas] = useState([]);\r\n  const [mostrarModal, setMostrarModal] = useState(false);\r\n\r\n  // Corrección: useCallback para evitar que la función cambie en cada render\r\n  const cargarPresentacionesActivas = useCallback(async () => {\r\n    if (producto) {\r\n      const productoRef = doc(db, \"productos\", producto.id);\r\n      const productoSnap = await getDoc(productoRef);\r\n      if (productoSnap.exists()) {\r\n        const data = productoSnap.data();\r\n        const activas = PRESENTACIONES.filter((tipo) => data[tipo] === \"activo\");\r\n        setPresentacionesActivas(activas);\r\n      }\r\n    }\r\n  }, [producto]);\r\n\r\n  useEffect(() => {\r\n    cargarPresentacionesActivas();\r\n  }, [cargarPresentacionesActivas]); // ✅ Agregamos la función como dependencia\r\n\r\n  const desactivarPresentacion = async (presentacion) => {\r\n    try {\r\n      const productoRef = doc(db, \"productos\", producto.id);\r\n      await updateDoc(productoRef, {\r\n        [presentacion]: \"inactivo\",\r\n      });\r\n\r\n      setPresentacionesActivas((prev) => prev.filter((p) => p !== presentacion));\r\n    } catch (error) {\r\n      console.error(\"Error al desactivar presentación:\", error);\r\n    }\r\n  };\r\n\r\n  const actualizarDesdeModal = () => {\r\n    setMostrarModal(false);\r\n    cargarPresentacionesActivas(); // Recargar la tabla cuando se active una presentación\r\n  };\r\n\r\n  return (\r\n    <div className=\"tabla-presentaciones\">\r\n      <h3>Precios por Presentación de {producto.nombre_prod}</h3>\r\n      <button className=\"btn-activar\" onClick={() => setMostrarModal(true)}>\r\n        Activar Presentaciones\r\n      </button>\r\n\r\n      {mostrarModal && (\r\n        <TablaPresentacionesInactivas\r\n          cerrarModal={actualizarDesdeModal} // Se actualiza la tabla después de activar una presentación\r\n          productoId={producto.id}\r\n        />\r\n      )}\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Tipo</th>\r\n            <th>Precio</th>\r\n            <th>Acción</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {presentacionesActivas.map((tipo) => (\r\n            <tr key={tipo}>\r\n              <td>{tipo}</td>\r\n              <td>\r\n                <input type=\"number\" placeholder={`Ingrese precio para ${tipo}`} />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn-desactivar\"\r\n                  onClick={() => desactivarPresentacion(tipo)}\r\n                >\r\n                  Desactivar\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TablaPreciosPorPresentacion;\r\n","import React, { useState } from \"react\";\r\nimport TablaPreciosPorPresentacion from \"./TablaPreciosPorPresentacion\";\r\nimport BuscarPresentacion from \"./BuscarPresentacion\";\r\nimport InputNumerico from \"./InputNumerico\";\r\n\r\nconst TablaProductos = ({ productos, cambios, manejarCambio, fechaHoy }) => {\r\n  const [productoSeleccionado, setProductoSeleccionado] = useState(null);\r\n  const [mostrarActivarPresentaciones, setMostrarActivarPresentaciones] = useState(false);\r\n\r\n  const togglePreciosAdicionales = (producto) => {\r\n    setProductoSeleccionado((prev) => (prev?.id === producto.id ? null : producto));\r\n  };\r\n\r\n  return (\r\n    <div className=\"tabla-container\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Producto</th>\r\n            <th>Último Precio</th>\r\n            <th>Total Compra</th>\r\n            <th>Nuevo Precio</th>\r\n            <th>Precio Unitario</th>\r\n            <th>Utilidad (%)</th>\r\n            <th>Tara</th>\r\n            <th>Presentación</th>\r\n            <th>Zarzamora Unidades</th>\r\n            <th>Tabora Unidades</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {productos\r\n            .filter((producto) =>\r\n              productoSeleccionado ? producto.id === productoSeleccionado.id : true\r\n            )\r\n            .map((producto) => {\r\n              const precioUnitario = producto.precio_compra || 1;\r\n              const nuevoPrecio = cambios[producto.id]?.nuevoPrecio ?? producto.precioc_ult ?? 0;\r\n              \r\n              // ✅ Calcula la utilidad dinámicamente\r\n              const utilidadCalculada =\r\n                nuevoPrecio > 0 && precioUnitario > 0\r\n                  ? (((nuevoPrecio - precioUnitario) / precioUnitario) * 100).toFixed(2)\r\n                  : \"\";\r\n\r\n              return (\r\n                <React.Fragment key={producto.id}>\r\n                  <tr>\r\n                    <td\r\n                      className=\"producto-clickable\"\r\n                      onClick={() => togglePreciosAdicionales(producto)}\r\n                    >\r\n                      {producto.nombre_prod || \"Sin nombre\"}\r\n                    </td>\r\n                    <td>{producto.precioc_ult || 0}</td>\r\n                    <td>{producto.precio_compra || 0}</td>\r\n                    <td>\r\n                      <InputNumerico\r\n                        value={nuevoPrecio}\r\n                        onChange={(value) => {\r\n                          manejarCambio(producto.id, \"nuevoPrecio\", value);\r\n                          if (precioUnitario > 0) {\r\n                            const nuevaUtilidad = ((value - precioUnitario) / precioUnitario) * 100;\r\n                            manejarCambio(producto.id, \"utilidad\", nuevaUtilidad.toFixed(2));\r\n                          }\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td>{precioUnitario.toFixed(2)}</td>\r\n                    <td>\r\n                      <InputNumerico\r\n                        value={cambios[producto.id]?.utilidad ?? utilidadCalculada}\r\n                        onChange={(value) => {\r\n                          manejarCambio(producto.id, \"utilidad\", value);\r\n                          if (precioUnitario > 0) {\r\n                            const nuevoPrecioCalculado = precioUnitario * (1 + value / 100);\r\n                            manejarCambio(producto.id, \"nuevoPrecio\", nuevoPrecioCalculado.toFixed(2));\r\n                          }\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <InputNumerico\r\n                        value={cambios[producto.id]?.tara ?? producto.tara ?? 1}\r\n                        onChange={(value) => manejarCambio(producto.id, \"tara\", value)}\r\n                      />\r\n                    </td>\r\n                    <td>{producto.presentacion || \"No disponible\"}</td>\r\n                    <td>{producto.cant_zarza || 0}</td>\r\n                    <td>{producto.cant_tab || 0}</td>\r\n                  </tr>\r\n\r\n                  {productoSeleccionado?.id === producto.id && (\r\n                    <tr>\r\n                      <td colSpan=\"10\">\r\n                        <TablaPreciosPorPresentacion\r\n                          producto={producto}\r\n                          mostrarActivarPresentaciones={() =>\r\n                            setMostrarActivarPresentaciones(true)\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n\r\n      {mostrarActivarPresentaciones && productoSeleccionado && (\r\n        <BuscarPresentacion\r\n          producto={productoSeleccionado}\r\n          cerrarModal={() => setMostrarActivarPresentaciones(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TablaProductos;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { collection, getDocs, updateDoc, doc } from \"firebase/firestore\";\r\nimport db from \"./firebase\";\r\nimport FiltroProductos from \"./components/FiltroProductos\";\r\nimport TablaProductos from \"./components/TablaProductos\";\r\nimport \"./CambioPrecios.css\";\r\n\r\nconst CambioPrecios = () => {\r\n  const [productos, setProductos] = useState([]);\r\n  const [filtro, setFiltro] = useState(\"todos\");\r\n  const [cambios, setCambios] = useState({});\r\n\r\n  const fechaHoy = new Date().toISOString().split(\"T\")[0];\r\n\r\n  useEffect(() => {\r\n    const cargarProductos = async () => {\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, \"productos\"));\r\n        const productosArray = querySnapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setProductos(productosArray);\r\n      } catch (error) {\r\n        console.error(\"Error al cargar productos:\", error);\r\n      }\r\n    };\r\n    cargarProductos();\r\n  }, []);\r\n\r\n  const manejarCambio = (id, campo, valor) => {\r\n    setCambios((prev) => ({\r\n      ...prev,\r\n      [id]: { ...prev[id], [campo]: valor },\r\n    }));\r\n  };\r\n\r\n  const guardarCambios = async () => {\r\n    try {\r\n      const actualizaciones = Object.keys(cambios).map(async (id) => {\r\n        const productoRef = doc(db, \"productos\", id);\r\n        await updateDoc(productoRef, cambios[id]);\r\n      });\r\n\r\n      await Promise.all(actualizaciones);\r\n      alert(\"Cambios guardados exitosamente.\");\r\n      setCambios({});\r\n    } catch (error) {\r\n      console.error(\"Error al actualizar datos:\", error);\r\n    }\r\n  };\r\n\r\n  const productosFiltrados = productos.filter((producto) => {\r\n    if (filtro === \"con_compra\") {\r\n      return producto.fecha_compra === fechaHoy;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  return (\r\n    <div className=\"cambio-precios-container\">\r\n      <h1>Cambio de Precios</h1>\r\n      <FiltroProductos filtro={filtro} setFiltro={setFiltro} />\r\n      <TablaProductos productos={productosFiltrados} cambios={cambios} manejarCambio={manejarCambio} fechaHoy={fechaHoy} />\r\n      <button className=\"btn-guardar\" onClick={guardarCambios} disabled={Object.keys(cambios).length === 0}>\r\n        Guardar Cambios\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CambioPrecios;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\r\nimport { AppProvider } from \"./AppContext\";\r\nimport Productos from \"./GestorColecciones\";\r\nimport Compras from \"./Compras\";\r\nimport CambioPrecios from \"./CambioPrecios\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <AppProvider>\r\n      <Router>\r\n        <div className=\"app\">\r\n          {/* Encabezado con navegación estilizada */}\r\n          <header className=\"header\">\r\n            <Link to=\"/\">Gestor Base de Datos</Link>\r\n            <Link to=\"/compras\">Compras</Link>\r\n            <Link to=\"/cambio-precios\">Cambio de Precios</Link>\r\n          </header>\r\n\r\n          {/* Contenido de las rutas */}\r\n          <div className=\"content\">\r\n            <Routes>\r\n              <Route path=\"/\" element={<Productos />} />\r\n              <Route path=\"/compras\" element={<Compras />} />\r\n              <Route path=\"/cambio-precios\" element={<CambioPrecios />} />\r\n            </Routes>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </AppProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}